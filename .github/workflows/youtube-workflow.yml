name: Update Latest Videos

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  youtube-workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          npm install googleapis

      - name: Fetch changes
        run: |
          git fetch origin update-videos

      - name: Check out the update-videos branch
        run: |
          git checkout -b update-videos origin/update-videos

      - name: Fetch and update videos
        run: |
          node .github/scripts/updateVideos.mjs
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          git add .

          if git diff --cached --exit-code; then
            echo "No changes to commit."
          else
            git commit -m "Update latest videos"
          fi

      - name: Push changes to update-videos branch
        run: |
          git push origin HEAD:update-videos

      - name: Create draft pull request
        run: |
          PR_URL=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{"title": "Update latest videos", "head": "update-videos", "base": "main", "draft": true, "body": "This pull request was automatically generated to update the latest videos."}' \
            | jq -r '.html_url')

          echo "Draft Pull Request URL: $PR_URL"

          # Wait for the pull request checks to complete
          while [[ "$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" $PR_URL | jq -r '.state')" != "open" ]]; do
            sleep 5
          done

          # Automate reviews
          REVIEW_COMMENTS=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"body": "LGTM", "event": "APPROVE"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls/$(basename $PR_URL)"/reviews" \
            | jq -r '.html_url')

          echo "Review Comments: $REVIEW_COMMENTS"

          # Wait for checks to pass
          while [[ "$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" $PR_URL/checks | jq -r '.total_count')" -gt 0 ]]; do
            sleep 5
          done

          # Merge the pull request using the API
          curl -X PUT \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "$PR_URL/merge"
